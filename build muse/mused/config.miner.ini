# Endpoint for P2P node to listen on
# p2p-endpoint = 

# Maxmimum number of incoming connections on P2P endpoint
# p2p-max-connections = 

# P2P nodes to connect to on startup (may specify multiple times)
# seed-node = 

# Pairs of [BLOCK_NUM,BLOCK_ID] that should be enforced as checkpoints.
# checkpoint = 

# Endpoint for websocket RPC to listen on
# rpc-endpoint = 

# Endpoint for TLS websocket RPC to listen on
# rpc-tls-endpoint = 

# The TLS certificate file for this server
# server-pem = 

# Password for this certificate
# server-pem-password = 

# Block signing key to use for init witnesses, overrides genesis file
# dbg-init-key = 

# File to read Genesis State from
# genesis-json = 

# API user specification, may be specified multiple times
# api-user = 

# Set an API to be publicly available, may be specified multiple times
public-api = database_api login_api

# Plugin(s) to enable, may be specified multiple times
enable-plugin = witness account_history

# Defines a range of accounts to track as a json pair ["from","to"] [from,to)
# track-account-range = 

# RPC endpoint of a trusted validating node (required)
# trusted-node = 

# Track market history by grouping orders into buckets of equal size measured in seconds specified as a JSON array of numbers
bucket-size = [15,60,300,3600,86400]

# How far back in time to track history for each bucket size, measured in the number of buckets (default: 5760)
history-per-size = 5760

# Defines a range of accounts to private messages to/from as a json pair ["from","to"] [from,to)
# pm-account-range = 

# Enable block production, even if the chain is stale.
enable-stale-production = true

# Percent of witnesses (0-99) that must be participating in order to produce blocks
required-participation = false

# name of witness controlled by this node (e.g. initwitness )
witness = "YOUR_WITNESS_NAME"

# WIF PRIVATE KEY to be used by one or more witnesses or miners
private-key = PRIVATE_WIF_HERE


# Account creation fee to be voted on upon successful POW - Minimum fee is 100.000 MUSE (written as 100000)
miner-account-creation-fee = 100000

# Streaming platform creation fee to be voted on upon successful POW - Minimum fee is 1000.000 M....USE (written as 100000)
miner-streaming-platform-update-fee = 1000000

# name of miner and its private key (e.g. ["account","WIF PRIVATE KEY"] )
miner = ["MINER_NAME", "MINER_PRIVATE_KEY" ]

# Number of threads to use for proof of work mining
mining-threads = 4

# declare an appender named "stderr" that writes messages to the console
[log.console_appender.stderr]
stream=std_error

# declare an appender named "p2p" that writes messages to p2p.log
[log.file_appender.p2p]
filename=logs/p2p/p2p.log
# filename can be absolute or relative to this config file

# route any messages logged to the default logger to the "stderr" logger we
# declared above, if they are info level are higher
[logger.default]
level=warn
appenders=stderr

# route messages sent to the "p2p" logger to the p2p appender declared above
[logger.p2p]
level=warn
appenders=p2p

